{"version":3,"sources":["helpers/config.js","pages/signInPage.js","pages/signUpPage.js","router/authRouter.js","components/header.js","components/createPost.js","components/allPost.js","router/mainRouter.js","pages/homePage.js","pages/mainPage.js","App.js","serviceWorker.js","index.js"],"names":["API_BASE_LINK","SignInPage","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","username","usenameError","passwordError","password","onChange","bind","assertThisInitialized","submitHandler","validate","usernameError","_this2","setState","fetch","method","mode","headers","Access-control-allow-origin","Content-Type","body","JSON","stringify","then","response","json","status","console","log","notification","message","localStorage","setItem","token","lognIn","user","catch","error","toString","key","value","_this$setState","defineProperty","test","_this3","classes","react_default","a","createElement","index_es","className","root","variant","required","id","label","margin","helperText","val","target","type","onClick","history","push","signUp","Component","withStyles","theme","position","top","left","transform","background","palette","grey","A700","display","flexDirection","padding","spacing","unit","minWidth","boxShadow","shadows","float","SignUpPage","firstname","lastname","email","confirmPassword","firstnameError","lastnameError","emailError","confirmPasswordError","onSubmit","goBack","AuthRouter","path","component","redirect","to","title","flexGrow","greeting","fontSize","CreatePost","uplaod","imageLink","isCustom","customText","text","data","addCustomImage","getImage","uplaodHandler","textHandler","getItem","FormData","set","files","userId","Authorization","custom","filter","customId","reader","FileReader","onload","event","result","readAsDataURL","_this4","content","editor","customImageGallery","style","height","cols","cellHeight","map","index","alt","src","ownImage","ref","input","name","accept","caption","imageView","width","action","cancel","gridTemplateColumns","gridColumnGap","flex","overflowY","alignItems","bottom","AllPost","posts","selected","selecthandler","err","card","image","imageURL","postDetails","comments","comment","objectFit","MainRouter","HomePage","creatPost","header","Route","render","createPost","assign","allPost","MainPage","addNotification","removeNotification","toConsumableArray","concat","length","pop","color","getNotifcationColor","Switch","keys","Redirect","extra","App","BrowserRouter","mainPage_MainPage","Boolean","window","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d7262af1.chunk.js","sourcesContent":["export const API_BASE_LINK = 'https://memebackend.herokuapp.com';\nexport const getNotifcationColor = (type) => {\n    switch(type){\n        case 'error':\n            return 'red';\n            break;\n        case 'success':\n            return 'green';\n            break;\n        default : \n            return 'black';\n            break;\n    }\n}","import React, { Component } from 'react'\nimport { withStyles, Paper, Typography, Divider, TextField, Button } from '@material-ui/core';\nimport { API_BASE_LINK } from '../helpers/config';\n\nconst styles = theme => {\n    return {\n        root : {\n            position : 'absolute',\n            top : '50%',\n            left : '50%',\n            transform : 'translate(-50%, -50%)',\n            background : theme.palette.grey.A700,\n            display : 'flex',\n            flexDirection : 'column',\n            padding : theme.spacing.unit*2,\n            minWidth : '40vw',\n            boxShadow : theme.shadows[13]\n        },\n        signUp : {\n            float : 'right'\n        }\n    }\n}\n\nclass SignInPage extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            username : null,\n            usenameError : null,\n            passwordError : null,\n            password : null\n        }\n        this.onChange = this.onChange.bind(this);\n        this.submitHandler = this.submitHandler.bind(this);\n        this.validate = this.validate.bind(this);\n    }\n    submitHandler(){\n        let usernameError = null;\n        let passwordError = null;\n        usernameError = this.validate('username', this.state.username)\n        passwordError = this.validate('password', this.state.password)\n        if(usernameError || passwordError ){\n            this.setState({\n                usernameError ,\n                passwordError\n            })\n        }else{\n            fetch(API_BASE_LINK + '/auth/login', {\n                method : 'POST',\n                mode : 'cors',\n                headers : {\n                    'Access-control-allow-origin': '*',\n                    'Content-Type' : 'application/json; charset=UTF-8'\n                },\n                body : JSON.stringify({\n                    username : this.state.username,\n                    password : this.state.password\n                })\n            })\n            .then(response => response.json())\n            .then(response => {\n                if(response.status !== 'success'){\n                    console.log(response);\n                    this.props.notification('error', response.message);\n                }else{\n                    localStorage.setItem('token', response.token);\n                    this.props.lognIn(response.user);\n                }\n            })\n            .catch(error => {\n                this.props.notification('error', error.toString());\n            })\n        }\n    }\n    onChange(key, value){\n        let usernameError = null;\n        let passwordError = null;\n        switch(key){\n            case 'username':\n               usernameError = this.validate(key, value);\n            case 'password':\n                passwordError = this.validate(key, value);\n        }\n        this.setState({\n            [key] : value,\n            usernameError : key === 'username' ? usernameError : this.state.usernameError,\n            passwordError : key === 'password' ? passwordError : this.state.passwordError\n        })\n    }\n    validate(key, value){\n        switch(key){\n            case 'username':\n                if(!value){\n                    return 'Username is required';\n                }else if(!/^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$/.test(value)){\n                    return 'Invalid Username';\n                }\n                break;\n            case 'password':\n                if(!value){\n                    return 'Password is required';\n                }\n        }\n    }\n    render() {\n        const { classes } = this.props;\n        return (\n        <Paper className={classes.root} >\n            <Typography variant=\"title\">Sign In</Typography>\n            <Divider/>\n            <TextField\n                required\n                error={this.state.usernameError ? true : false} \n                id=\"username\"\n                label=\"Username\"\n                margin=\"normal\"\n                helperText={this.state.usernameError}\n                onChange={val => this.onChange('username', val.target.value)}\n            />\n            <TextField\n                required\n                id=\"password\"\n                type=\"password\"\n                error={this.state.passwordError ? true : false} \n                label=\"Password\"\n                margin=\"normal\"\n                helperText={this.state.passwordError}\n                onChange={val => this.onChange('password', val.target.value)}\n            />\n            <div>\n                <Button onClick={this.submitHandler} variant=\"outlined\">Sign In</Button>\n                <Button onClick={() => this.props.history.push('/signup')} className={classes.signUp} variant=\"outlined\">Sign Up</Button>\n            </div>\n        </Paper>\n        )\n    }\n}\n\nexport default withStyles(styles)(SignInPage);\n","import React, { Component } from 'react'\nimport { withStyles, Paper, Typography, Divider, TextField, Button } from '@material-ui/core';\nimport { API_BASE_LINK } from '../helpers/config';\n\nconst styles = theme => {\n    console.log(theme)\n    return {\n        root : {\n            position : 'absolute',\n            top : '50%',\n            left : '50%',\n            transform : 'translate(-50%, -50%)',\n            background : theme.palette.grey.A700,\n            display : 'flex',\n            flexDirection : 'column',\n            padding : theme.spacing.unit*2,\n            minWidth : '40vw',\n            boxShadow : theme.shadows[13]\n        },\n        signUp : {\n            float : 'right'\n        }\n    }\n}\n\nclass SignUpPage extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            firstname : null,\n            lastname : null,\n            email : null,\n            password : null,\n            confirmPassword : null,\n            firstnameError : null,\n            lastnameError : null,\n            emailError : null,\n            passwordError : null,\n            confirmPasswordError : null,\n        }\n        this.onChange = this.onChange.bind(this);\n        this.validate = this.validate.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n    onChange(key, value){\n        let firstnameError = null;\n        let lastnameError = null;\n        let emailError = null;\n        let passwordError = null;\n        let confirmPasswordError = null;\n        switch(key){\n            case 'email':\n                emailError = this.validate(key, value);\n                break;\n            case 'firstname':\n                firstnameError = this.validate(key, value);\n                break;\n            case 'lastname':\n                lastnameError = this.validate(key, value);\n                break;\n            case 'password':\n                passwordError = this.validate(key, value);\n                break;\n            case 'confirmPassword':\n                confirmPasswordError = this.validate(key, value);\n                break;\n        }\n        this.setState({\n            [key] : value,\n            firstnameError : key === 'firstname' ? firstnameError : this.state.firstnameError,\n            lastnameError : key === 'lastname' ? lastnameError : this.state.lastnameError,\n            passwordError : key === 'password' ? passwordError : this.state.passwordError,\n            emailError : key === 'email' ? emailError : this.state.emailError,\n            confirmPasswordError : key === 'confirmPassword' ? confirmPasswordError : this.state.confirmPasswordError\n        })\n    }\n    validate(key, value){\n        switch(key){\n            case 'email':\n                if(!value){\n                    return 'Email is required';\n                }else if(!/^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$/.test(value)){\n                    return 'Invalid Email';\n                }\n                break;\n            case 'firstname':\n                if(!value){\n                    return 'First name is required';\n                }\n                break;\n            case 'lastname':\n                if(!value){\n                    return 'Last name is required';\n                }\n                break;\n            case 'password':\n                if(!value){\n                    return 'Password is required';\n                }\n                break;\n            case 'confirmPassword':\n                if(!value){\n                    return 'Re-Type Password is required'\n                }\n                else if(value !== this.state.password){\n                    return 'Not Matched'\n                }\n                break;\n        }\n    }\n    onSubmit(){\n        let firstnameError = null;\n        let lastnameError = null;\n        let emailError = null;\n        let passwordError = null;\n        let confirmPasswordError = null;\n        firstnameError = this.validate('firstname', this.state.firstname);\n        lastnameError = this.validate('lastname', this.state.lastname);\n        emailError = this.validate('email', this.state.email);\n        passwordError = this.validate('password', this.state.password);\n        confirmPasswordError = this.validate('confirmPassword', this.state.confirmPassword);\n        if(firstnameError || lastnameError || emailError || passwordError || confirmPasswordError){\n            this.setState({\n                firstnameError,\n                lastnameError,\n                emailError,\n                passwordError,\n                confirmPasswordError\n            })\n        }else{\n            fetch(API_BASE_LINK + '/auth/signup', {\n                method : 'POST',\n                mode : 'cors',\n                headers : {\n                    'Access-control-allow-origin': '*',\n                    'Content-Type' : 'application/json; charset=UTF-8'\n                },\n                body : JSON.stringify({\n                    firstname :  this.state.firstname,\n                    lastname :  this.state.lastname,\n                    email : this.state.email,\n                    password : this.state.password,\n                    confirmPassword : this.state.confirmPassword\n                })\n            })\n            .then(response => response.json())\n            .then(response => {\n                if(response.status !== 'success'){\n                    console.log(response);\n                    this.props.notification('error', response.message);\n                }else{\n                    localStorage.setItem('token', response.token);\n                    this.props.lognIn(response.user);\n                }\n            })\n            .catch(error => {\n                this.props.notification('error', error.toString());\n            })\n        }\n    }\n    render() {\n        const { classes } = this.props;\n        return (\n        <Paper className={classes.root} >\n            <Typography variant=\"title\">Sign Up</Typography>\n            <Divider/>\n            <TextField\n                required\n                error={this.state.firstnameError ? true : false} \n                id=\"firstname\"\n                label=\"First Name\"\n                margin=\"normal\"\n                helperText={this.state.firstnameError}\n                onChange={val => this.onChange('firstname', val.target.value)}\n            />\n            <TextField\n                required\n                error={this.state.lastnameError ? true : false} \n                id=\"lastname\"\n                label=\"Last Name\"\n                margin=\"normal\"\n                helperText={this.state.lastnameError}\n                onChange={val => this.onChange('lastname', val.target.value)}\n            />\n            <TextField\n                required\n                error={this.state.emailError ? true : false} \n                id=\"email\"\n                label=\"Email\"\n                margin=\"normal\"\n                helperText={this.state.emailError}\n                onChange={val => this.onChange('email', val.target.value)}\n            />\n            <TextField\n                required\n                error={this.state.passwordError ? true : false} \n                id=\"password\"\n                label=\"Password\"\n                margin=\"normal\"\n                type=\"password\"\n                helperText={this.state.passwordError}\n                onChange={val => this.onChange('password', val.target.value)}\n            />\n            <TextField\n                required\n                id=\"confirmPassword\"\n                type=\"password\"\n                error={this.state.confirmPasswordError ? true : false} \n                label=\"Re-Type Password\"\n                margin=\"normal\"\n                helperText={this.state.confirmPasswordError}\n                onChange={val => this.onChange('confirmPassword', val.target.value)}\n            />\n            <div>\n                <Button onClick={this.onSubmit} variant=\"outlined\">Sign Up</Button>\n                <Button onClick={() => this.props.history.goBack()} className={classes.signUp} variant=\"outlined\">Back</Button>\n            </div>\n        </Paper>\n        )\n    }\n}\n\nexport default withStyles(styles)(SignUpPage);\n","import SignInPage from '../pages/signInPage';\nimport SignUpPage from '../pages/signUpPage';\n\nlet AuthRouter = [{\n    path : '/signin',\n    component : SignInPage\n},{\n    path : '/signup',\n    component : SignUpPage\n},{\n    redirect : true,\n    to : '/signin'\n}]\n\nexport default  AuthRouter;","import React from 'react'\nimport { AppBar , Toolbar, Typography, withStyles, Button } from '@material-ui/core';\n\nconst styles = theme => {\n    return({\n        root : {\n            background : theme.palette.grey.A700\n        },\n        title : {\n            flexGrow : '1'\n        },\n        greeting : {\n            padding : '0 '+theme.spacing.unit+'px',\n            fontSize : theme.spacing.unit*3\n        }\n    })\n}\n\nconst Header = (props) => {\n    const {classes} = props;\n    return (\n        <div>\n            <AppBar className={classes.root}>\n                <Toolbar>\n                    <Typography className={classes.title} variant='title'>\n                        MemeCreater\n                    </Typography>\n                    <Button onClick={() => props.push('/home/create')}>Add Post</Button>\n                    <Typography className={classes.greeting}>\n                        {'Hi, '+props.user.firstname}\n                    </Typography>\n                    <Button variant=\"outlined\">Log Out</Button>\n                </Toolbar>\n            </AppBar>\n        </div>\n    )\n}\n\nexport default withStyles(styles)(Header);\n","import React, { Component } from 'react'\nimport { Paper, withStyles, Button, Divider, TextField, Typography, GridList } from '@material-ui/core';\nimport { API_BASE_LINK }  from '../helpers/config';\nconst styles = theme => {\n    console.log(theme)\n    return({\n        content : {\n            width : '100',\n            height : '100%',\n            display : 'grid',\n            gridTemplateColumns : '2fr 1fr',\n            padding : theme.spacing.unit*2,\n            gridColumnGap : theme.spacing.unit*2+'px'\n        },\n        editor : {\n            padding : theme.spacing.unit*2,\n            display : 'flex',\n            flexDirection : 'column'\n        },\n        customImageGallery : {\n            background : theme.palette.grey[300]  ,\n            flex : 2,\n            overflowY : 'scroll'\n        },\n        ownImage : {\n            flex : 1,\n        },\n        caption : {\n            width : '100%'\n        },\n        cancel : {\n            float : 'right'\n        },\n        imageView : {\n            display : 'flex',\n            position : 'relative',\n            padding : theme.spacing.unit,\n            flexDirection : 'column',\n            alignItems : 'center'\n        },\n        action : {\n            position:'absolute', \n            left:'0', \n            bottom: '0',\n            padding:theme.spacing.unit,\n            width : '100%'\n        }\n    })\n}\n\nclass CreatePost extends Component {\n    constructor(props){\n        super(props);\n        this.uplaod = null;\n        this.state = {\n            imageLink : null,\n            isCustom : false,\n            customText : [], \n            text : null,\n            data : []\n        }\n        this.addCustomImage = this.addCustomImage.bind(this);\n        this.getImage = this.getImage.bind(this);\n        this.uplaodHandler = this.uplaodHandler.bind(this);\n        this.textHandler = this.textHandler.bind(this);\n    }\n    uplaodHandler(){\n        let token = localStorage.getItem('token')\n        if(this.state.text && this.state.imageLink){\n            let data = new FormData();\n            if(!this.state.isCustom){\n                data.set('post', this.uplaod.files[0]);\n            }\n            data.set('caption', this.state.text);\n            data.set('imageLink', this.state.isCustom? this.state.imageLink : '');\n            fetch(API_BASE_LINK+'/post/upload/'+this.props.user.userId, {\n                method : 'POST',\n                mode : 'cors',\n                body : data,\n                headers : {\n                    'Access-control-allow-origin': '*',\n                    'Authorization' : 'Bearer '+token\n                },\n            })\n            .then(response => response.json())\n            .then(response => {\n                this.props.push('/home/all')\n            })\n            .catch(error => console.log(error))\n        }else{\n            this.props.notification('error', 'Missing Input or Image(Please select Custom or Own Image)');\n        }\n    }\n    textHandler(val){\n        this.setState({\n            text : val\n        })\n    }\n    addCustomImage(id){\n        let custom = this.state.data.filter(val => val.customId === id)[0]\n        this.setState({\n            imageLink : API_BASE_LINK + custom.imageLink,\n            isCustom : true,\n            customText : custom.text\n        })\n        this.uplaod.value = null;\n    }\n    getImage(val){\n        console.log(val);\n        var reader = new FileReader();\n        reader.onload = (function(event){\n            this.setState({\n                imageLink : event.target.result,\n                isCustom : false,\n                customText : []\n            })\n        }).bind(this);\n        reader.readAsDataURL(val.target.files[0]);\n    }\n    componentDidMount(){\n        let token = localStorage.getItem('token');\n        fetch(API_BASE_LINK+'/custom/all', {\n            method : 'GET',\n            mode : 'cors',\n            headers : {\n                'Access-control-allow-origin': '*',\n                'Authorization' : 'Bearer '+token,\n                'Content-Type' : 'application/json; charset=UTF-8'\n            },\n\n        })\n        .then(response => response.json())\n        .then(response => {\n            if(response.status === 'success'){\n                this.setState({\n                    data : response.custom\n                })\n            }else{\n                this.props.notification('error', 'not able to get custom image')\n            }\n        })\n    }\n    render() {\n        const { classes } = this.props;\n        return (\n        <div className={classes.content}>\n            <Paper className={classes.editor}>\n                <div className={classes.customImageGallery}>\n                    <GridList style={{height : '400px'}} cols={3} cellHeight={180}>\n                        {\n                            this.state.data.map((val, index) => {\n                                return(\n                                    <img onClick={() => this.addCustomImage(val.customId)} key={index} alt=\"custom\" src={API_BASE_LINK+val.imageLink}/>\n                                )\n                            })\n                        }\n                    </GridList>\n                </div>\n                <span>--or--</span>\n                <div className={classes.ownImage}>\n                    <input ref={input => this.uplaod = input} onChange={val => this.getImage(val)} name=\"post\" type=\"file\" accept=\"image/*\"/><br/>\n                    <TextField\n                        required \n                        id=\"caption\"\n                        label=\"caption\"\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        onChange={val => this.textHandler(val.target.value)}\n                        className={classes.caption}\n                    />\n                </div>\n            </Paper>\n            <Paper className={classes.imageView}>\n                {\n                    this.state.imageLink && (\n                        <img width=\"300px\" height=\"300px\" alt=\"post\" src={this.state.imageLink}/>\n                    )\n                }\n                <div className={classes.action}>\n                    <Button onClick={this.uplaodHandler} variant=\"outlined\">Uplaod</Button>\n                    <Button className={classes.cancel} onClick={() => this.props.push('/home/all')} variant=\"outlined\">Canel</Button>\n                </div>\n            </Paper>\n        </div>\n        )\n    }\n}\n\nexport default withStyles(styles)(CreatePost);\n","import React, { Component } from 'react'\nimport { Paper, withStyles, Card, CardMedia,CardActions, Button, Divider, TextField, Typography, GridList } from '@material-ui/core';\nimport { API_BASE_LINK }  from '../helpers/config';\nconst styles = theme => {\n    console.log(theme)\n    return({\n        content : {\n            width : '100',\n            height : '100%',\n            display : 'grid',\n            gridTemplateColumns : '3fr 1fr',\n            padding : theme.spacing.unit*2,\n            gridColumnGap : theme.spacing.unit*2+'px'\n        },\n        posts : {\n            display : 'grid',\n            gridTemplateColumns : ' 1fr 1fr 1fr 1fr',\n            padding : theme.spacing.unit*2,\n            gridColumnGap : theme.spacing.unit*2+'px'  \n        },\n\n        postDetails : {\n            display : 'flex',\n            padding : theme.spacing.unit*2,\n            flexDirection : 'column',\n            alignItems : 'center'\n        },\n        card : {\n            height : '200px',\n            objectFit: 'cover',\n        },\n\n    })\n}\n\nclass AllPost extends Component {\n    constructor(props){\n        super(props);\n        this.uplaod = null;\n        this.state = {\n            posts : [],\n            selected : 0\n        }\n        this.selecthandler = this.selecthandler.bind(this);\n    }\n    selecthandler(id){\n        this.setState({\n            selected : id\n        })\n    }\n    componentDidMount(){\n        let token = localStorage.getItem('token');\n        fetch(API_BASE_LINK + '/post/all',{\n            method : 'GET',\n            mode : 'cors',\n            headers : {\n                'Access-control-allow-origin': '*',\n                'Authorization' : 'Bearer '+token,\n                'Content-Type' : 'application/json; charset=UTF-8'\n            },\n        })\n        .then(response => response.json())\n        .then(response => {\n            if(response.status === 'success'){\n                this.setState({\n                    posts : response.posts\n                })\n            }else{  \n                this.props.notification('error', response.message);\n            }\n        }).catch(err => {\n            this.props.notification('error', err)\n        })\n    }\n    render() {\n        console.log(this.state.posts)\n        const { classes } = this.props;\n        return (\n        <div className={classes.content}>\n            <Paper className={classes.posts}>\n                {\n                    this.state.posts.map((val, index) => (\n                        <Card onClick={() => this.selecthandler(index)} className={classes.card} key={index}>\n                            <CardMedia component=\"img\" image={API_BASE_LINK + val.imageURL}>\n                            </CardMedia>\n                        </Card>\n                    ))\n                }\n            </Paper>\n            <Paper className={classes.postDetails}>\n                {\n                    this.state.posts\n                    .filter((val , index) => index == this.state.selected)\n                    .map((val, index) => (\n                        <div key={index}>\n                            <div>\n                                <img width=\"300px\" height=\"300px\" alt={val.caption} src={API_BASE_LINK + val.imageURL}/>\n                            </div>\n                            <div>\n                                <div><Button>Like</Button></div>\n                                <div><Button>Download</Button></div>\n                            </div>\n                            <div>\n                                {\n                                    val.comments.map((comment , index) => (\n                                        <div key={index}>{comment.comment}</div>\n                                    ))\n                                }\n                            </div>\n                            <div>\n                                <TextField\n                                    required \n                                    id=\"comment\"\n                                    label=\"comment\"\n                                    margin=\"normal\"\n                                    variant=\"outlined\"\n                                />\n                            </div>\n                            <div>\n                                <Button>Add Comment</Button>\n                            </div>\n                        </div>\n                    ))\n                    }\n            </Paper>\n        </div>\n        )\n    }\n}\n\nexport default withStyles(styles)(AllPost);\n","import HomePage from '../pages/homePage';\n\nlet MainRouter = [{\n    path : '/home',\n    name : 'Home',\n    component : HomePage\n},{\n    redirect : true,\n    to : '/home/all'\n}]\n\nexport default  MainRouter;","import React, { Component } from 'react'\nimport Header from '../components/header';\nimport CreatePost from '../components/createPost';\nimport AllPost from '../components/allPost';\nimport { Route } from 'react-router-dom';\n\n\nexport default class HomePage extends Component {\n    constructor(props){\n        super(props);\n        console.log(this.props);\n        this.state = {\n            creatPost : true\n        }\n    }\n    render() {\n        return (\n        <div>\n            <Header push={this.props.history.push} user={this.props.user}/>\n            .\n            <div className='content'>\n            <Route path='/home/create'  render={props => <CreatePost {...props} push={this.props.history.push} user={this.props.user} notification={this.props.notification}/>}/>\n            <Route path='/home/all' render={props => <AllPost {...props} push={this.props.history.push} user={this.props.user} notification={this.props.notification}/>}/>\n            \n            </div>\n        </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { Paper, Button, Divider } from '@material-ui/core';\nimport AuthRouter from '../router/authRouter';\nimport MainRouter from '../router/mainRouter';\nimport './css/mainPage.css';\nimport { getNotifcationColor } from '../helpers/config';\nimport { API_BASE_LINK } from '../helpers/config';\n\nexport default class MainPage extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            notification : [],\n            user : null\n        }\n        this.addNotification = this.addNotification.bind(this);\n        this.removeNotification = this.removeNotification.bind(this);\n        this.lognIn = this.lognIn.bind(this);\n    }\n    addNotification(type, message){\n        this.setState({\n            notification: [...this.state.notification , {type, message}]\n        });\n    }\n    removeNotification(){\n        if(this.state.notification.length > 0){\n            let notification = [...this.state.notification];\n            notification.pop();\n            this.setState({\n                notification : notification\n            })\n        }\n    }\n    lognIn(user){\n        this.setState({\n            user : user\n        })\n    }\n    componentDidMount(){\n        let token =  localStorage.getItem('token');\n        if(token){\n            fetch(API_BASE_LINK+'/user/details', {\n                method : 'GET',\n                mode : 'cors',\n                headers : {\n                    'Access-control-allow-origin': '*',\n                    'Content-Type' : 'application/json; charset=UTF-8',\n                    'Authorization' : 'Bearer '+token\n                },\n            })\n            .then(response => response.json())\n            .then(response => {\n                if(response.status !== 'success'){\n                    this.addNotification('error', response.message);\n                }else{\n                    this.setState({\n                        user : response.user\n                    })\n                }\n            }).catch(error => {\n                console.log(error)\n                //this.addNotification('error', error);\n            })\n        }\n    }\n    render() {\n        let notification = null;\n        if(this.state.notification.length > 0){\n            notification = this.state.notification.map((val, index) => {\n                return (\n                    <Paper key={index} className=\"notification\">\n                        <p style={{color : getNotifcationColor(val.type)}}>{val.message}</p>\n                        <Divider/>\n                        <br/>\n                        <Button style={{float : 'right'}} onClick={this.removeNotification} variant=\"outlined\">Close</Button>\n                    </Paper>\n                )\n            })\n        }\n        return (\n        <div className=\"main-root\">\n            {notification}\n            <Switch>\n                {\n                    this.state.user ? \n                        MainRouter.map((val, keys) => {\n                            if(val.redirect){\n                                return(<Redirect key={keys} to={val.to} />)\n                            }else{\n                                return(<Route key={keys} path={val.path} render={\n                                    props => (\n                                        <val.component user={this.state.user} lognIn={this.lognIn} notification={this.addNotification} {...props} />\n                                    )\n                                } />)\n                            }\n                        })\n                        :\n                        AuthRouter.map((val, keys) => {\n                            if(val.redirect){\n                                return(<Redirect key={keys} to={val.to} />)\n                            }else{\n                                return(<Route key={keys} path={val.path} render={\n                                    props => (\n                                        <val.component lognIn={this.lognIn} notification={this.addNotification} {...props} />\n                                    )\n                                } extra />)\n                            }\n                        })\n                }\n            </Switch>\n        </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport MainPage from './pages/mainPage';\nimport { CssBaseline } from '@material-ui/core';\nimport { BrowserRouter } from 'react-router-dom';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <CssBaseline/>\n        <BrowserRouter>\n          <MainPage/>\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}